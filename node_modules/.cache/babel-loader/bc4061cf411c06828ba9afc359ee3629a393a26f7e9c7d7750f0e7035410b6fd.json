{"ast":null,"code":"var _jsxFileName = \"C:\\\\NorsysFormation\\\\react-todo-tp2023\\\\src\\\\components\\\\Todo\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [newTodoItems, setTodoItems] = useState([{\n    id: generateId(),\n    todo: \"Read books\",\n    complete: false\n  }, {\n    id: generateId(),\n    todo: \"Journaling\",\n    complete: false\n  }, {\n    id: generateId(),\n    todo: \"Make Dinner\",\n    complete: false\n  }, {\n    id: generateId(),\n    todo: \"Push-ups\",\n    complete: false\n  }]);\n  const generateId = () => Math.floor(Math.random() * 1000);\n  const updateTodoItems = id => {\n    const newTodoitems = todoItems.map(item => {\n      if (item.id === id) {\n        return {\n          ...item,\n          complete: true\n        };\n      }\n      return item;\n    });\n    setTodoItems(updateTodoItems);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center text-light my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-5\",\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control m-auto\",\n        name: \"search\",\n        placeholder: \"search todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), todoItems.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todoItem: item,\n      updateItems: updateTodoItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n_s(Todo, \"UzGDchRXf2JYdKawcRZS5qf+sdM=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","TodoItem","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","newTodoItems","setTodoItems","id","generateId","todo","complete","Math","floor","random","updateTodoItems","newTodoitems","todoItems","map","item","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","todoItem","updateItems","_c","$RefreshReg$"],"sources":["C:/NorsysFormation/react-todo-tp2023/src/components/Todo/Todo.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst Todo = () => {\r\n  const [newTodoItems,setTodoItems]  =useState(\r\n    [\r\n        {\r\n          id: generateId(),\r\n          todo: \"Read books\",\r\n          complete: false,\r\n        },\r\n        {\r\n          id: generateId(),\r\n          todo: \"Journaling\",\r\n          complete: false,\r\n        },\r\n        {\r\n          id: generateId(),\r\n          todo: \"Make Dinner\",\r\n          complete: false,\r\n        },\r\n        {\r\n          id: generateId(),\r\n          todo: \"Push-ups\",\r\n          complete: false,\r\n        },\r\n    ]\r\n  )\r\n  const generateId = () => Math.floor(Math.random() * 1000);\r\n  const updateTodoItems = (id) => {\r\n    const newTodoitems=todoItems.map((item) => {\r\n      if (item.id === id) {\r\n        return { ...item, complete:true };\r\n      }\r\n      return item;\r\n    });\r\n    setTodoItems(updateTodoItems)\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <header className=\"text-center text-light my-4\">\r\n        <h1 className=\"mb-5\">Todo List</h1>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control m-auto\"\r\n          name=\"search\"\r\n          placeholder=\"search todos\"\r\n        />\r\n      </header>\r\n      {todoItems.map((item) => (\r\n        <TodoItem todoItem={item} updateItems={updateTodoItems}/>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default Todo;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAACC,YAAY,CAAC,GAAGT,QAAQ,CAC1C,CACI;IACEU,EAAE,EAAEC,UAAU,EAAE;IAChBC,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAEC,UAAU,EAAE;IAChBC,IAAI,EAAE,YAAY;IAClBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAEC,UAAU,EAAE;IAChBC,IAAI,EAAE,aAAa;IACnBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAEC,UAAU,EAAE;IAChBC,IAAI,EAAE,UAAU;IAChBC,QAAQ,EAAE;EACZ,CAAC,CACJ,CACF;EACD,MAAMF,UAAU,GAAGA,CAAA,KAAMG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC;EACzD,MAAMC,eAAe,GAAIP,EAAE,IAAK;IAC9B,MAAMQ,YAAY,GAACC,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAK;MACzC,IAAIA,IAAI,CAACX,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGW,IAAI;UAAER,QAAQ,EAAC;QAAK,CAAC;MACnC;MACA,OAAOQ,IAAI;IACb,CAAC,CAAC;IACFZ,YAAY,CAACQ,eAAe,CAAC;EAC/B,CAAC;EAGD,oBACEd,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAQoB,SAAS,EAAC,6BAA6B;MAAAD,QAAA,gBAC7CnB,OAAA;QAAIoB,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnCxB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXL,SAAS,EAAC,qBAAqB;QAC/BM,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC;MAAc;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACK,EACRR,SAAS,CAACC,GAAG,CAAEC,IAAI,iBAClBlB,OAAA,CAACF,QAAQ;MAAC8B,QAAQ,EAAEV,IAAK;MAACW,WAAW,EAAEf;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxD,CAAC;EAAA,gBACD;AAEP,CAAC;AAACpB,EAAA,CArDID,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAsDV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}